<!DOCTYPE html>
<html>
<head>
	<!-- Latest compiled and minified CSS -->
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css">

	<!-- jQuery library -->
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css">
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js"></script>
	<script src="https://code.jquery.com/jquery-3.4.1.js"></script>
	<link href="/views/pages/javaStyleSheet.css" rel="stylesheet">
	<title>For-Loops</title>
</head>
<body>
		<!-- Navigation Bar -->
		<div class="bg-img">
		  <div class="container">
		    <div class="topnav">
		      <a href="/index">Home</a>
		      <a href="/aboutUs">About Us</a>
		      <a href="/javaContent">Content</a>
					<a style="padding:0px 0px;"><form action="/for_loops/setLoc" method="post"><button class="topnav">Set Location</button></form></a>
	        <%
	      	if (location) {
	      		var loc = '';
	          loc += '<a href="';
	          loc += location;
	          loc += '">Go To Last Location</a>';

	          %>
	      	<%- loc %>
	      	<% } %>
	        <%
	      	if (username) {
	      		var user = '';
	      		if(username == "Not Signed In"){
	            user += '<a href="/login">Login/Register</a>';
	          }else{
	            user += '<a> Signed in as: ';
	            user += username;
	            user += '</a>';
	          }
	          %>
	      	<%- user %>
	      	<% } %>
		    </div>

		  </div>
		</div>

<div class="sidenav">
  <a href="/algorithm">What is an Algorithm Anyways?</a>
  <a href="/hello">Hello World</a>
  <a href="/comments">Comments</a>
  <a href="/encoding">Number and Character Encodings</a>
  <a href="/variables">Variables</a>
  <a href="/conversions">Primitive Type Conversions</a>
  <a href="/scope">Scope, Operators and Precedence</a>
  <a href="/error">System In, Out and Error</a>
  <a href="/conditional">Conditional Statements</a>
  <a href="/switch">Switch Statements</a>
  <a href="/while_loops">While-Loops, Continue and Break</a>
  <a href="/do_while">Do-While Loops</a>
  <a href="/for_loops">For-Loops</a>
  <a href="/strings">Strings</a>
  <a href="/type_wrap">Type Wrappers, Auto-Boxing and Unboxing</a>
  <a href="/writing_methods">Writing Functions</a>
  <a href="/arrays">Arrays</a>
  <a href="/arrays_examples">Array Examples</a>
  <a href="/var_args">Varargs-Variable Length Arguments</a>
  <a href="/2D">2D Arrays</a>
  <a href="/Expressions">Catching Expressions</a>
  <a href="/Writing">Writing to a File</a>
  <a href="/Reading1">Reading and Writing Files I</a>
  <a href="/Reading2">Reading and Writing Files II</a>
  <a href="/Parsing">Parsing Strings</a>
  <a href="/Tokens">Parsing Strings into Fixed Length Tokens</a>
</div>
<div class="main">
	<h1>
		For-loops
	</h1>

	<br></br>

	<p>
		For-loops are probably the most commonly used loop statement.  The general form of a for-loop is as follows.

	</p>

	<pre>
		for (init_expr; bool_expr; post_expr1, post_expr2, ...) {
		    ...
		}
</pre>

	<br></br>
	<p>
		Every for-loop can be written alternatively with a while loop.  An equivalent general form is below.
	</p>

	<pre>
		init_expr;
		while(bool_expr) {
		    ...
		post_expr1;
		post_expr2;
		...
		}
	</pre>
	<br></br>
	<h1>
		Usage:
	</h1>

	<p>
		As illustrated in the example below, you can leave the expressions empty but you must include the semicolons.
		This loop is an infinite loop and does nothing except spin.
	</p>

	<pre>
		for ( ; ; ) {
		    ;
		}
	</pre>
	<br>
	<p>
		The code below simulates a while-loop that counts from 0 to 9.
	</p>

	<pre>
		int i = 0;
		for (; i < 10; ) {
		    System.out.printf("%d ", i);
		    i++;
		}
	</pre>
	<br>
	<p>
		Below is a code fragment does the same thing as above, it counts from 0 to 9.
	</p>

	<pre>
		for (int i = 0; i < 9; i++) {
	    System.out.printf("%d\n", i);
	}
	</pre>
	<br>
	<p>
		The example below uses multiple post expressions to increment a lower bound variable and decrement an upper bound variable.
	</p>
	<pre>
		for (int i = 0, j = 10; i < j; i++, j--) {
	    System.out.println("%d %d\n", i, j);
	}
	</pre>
	<br>
	<p>
		The code below counts the number of even numbers between an upper and lower bound (exclusively).

	</p>
	<pre>
		int a = ...
		int b = ...

		int numEven = 0;
		for (int i = a + 1; i < b; i++) {
		    if (i % 2 == 0) {
		        numEven++;
		    }
		}
		System.out.println("Number of even numbers: %d\n", numEven);
	</pre>
	<br>



<% include ../partials/footer %>
</div>
