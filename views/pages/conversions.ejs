<!DOCTYPE html>
<html>
<head>
	<!-- Latest compiled and minified CSS -->
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css">

	<!-- jQuery library -->
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css">
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js"></script>
	<script src="https://code.jquery.com/jquery-3.4.1.js"></script>
	<link href="/views/pages/javaStyleSheet.css" rel="stylesheet">
	<title>Primitive Type Conversions</title>
</head>
<body>
		<!-- Navigation Bar -->
		<div class="bg-img">
		  <div class="container">
		    <div class="topnav">
		      <a href="/index">Home</a>
		      <a href="/aboutUs">About Us</a>
		      <a href="/javaContent">Content</a>
					<a style="padding:0px 0px;"><form action="/conversions/setLoc" method="post"><button class="topnav">Set Location</button></form></a>
	        <%
	      	if (location) {
	      		var loc = '';
	          loc += '<a href="';
	          loc += location;
	          loc += '">Go To Last Location</a>';

	          %>
	      	<%- loc %>
	      	<% } %>
	        <%
	      	if (username) {
	      		var user = '';
	      		if(username == "Not Signed In"){
	            user += '<a href="/login">Login/Register</a>';
	          }else{
	            user += '<a> Signed in as: ';
	            user += username;
	            user += '</a>';
	          }
	          %>
	      	<%- user %>
	      	<% } %>
		    </div>

		  </div>
		</div>

<div class="sidenav">
  <a href="/algorithm">What is an Algorithm Anyways?</a>
  <a href="/hello">Hello World</a>
  <a href="/comments">Comments</a>
  <a href="/encoding">Number and Character Encodings</a>
  <a href="/variables">Variables</a>
  <a href="/conversions">Primitive Type Conversions</a>
  <a href="/scope">Scope, Operators and Precedence</a>
  <a href="/error">System In, Out and Error</a>
  <a href="/conditional">Conditional Statements</a>
  <a href="/switch">Switch Statements</a>
  <a href="/while_loops">While-Loops, Continue and Break</a>
  <a href="/do_while">Do-While Loops</a>
  <a href="/for_loops">For-Loops</a>
  <a href="/strings">Strings</a>
  <a href="/type_wrap">Type Wrappers, Auto-Boxing and Unboxing</a>
  <a href="/writing_methods">Writing Functions</a>
  <a href="/arrays">Arrays</a>
  <a href="/arrays_examples">Array Examples</a>
  <a href="/var_args">Varargs-Variable Length Arguments</a>
  <a href="/2D">2D Arrays</a>
  <a href="/Expressions">Catching Expressions</a>
  <a href="/Writing">Writing to a File</a>
  <a href="/Reading1">Reading and Writing Files I</a>
  <a href="/Reading2">Reading and Writing Files II</a>
  <a href="/Parsing">Parsing Strings</a>
  <a href="/Tokens">Parsing Strings into Fixed Length Tokens</a>
</div>
<div class="main">
	<h1>
		<br>
		Primitive Type Conversions
	</h1>

	<br></br>

	<p>
		Sometimes you can assign a value of one type to a variable of another type.  If the types are compatible, Java does the conversion automatically.  For example,
	</p>
	<br>
	<pre>
		int x = 10;
		long y = x;
	</pre>
	<br>
	<p>
		But there are not automatic conversions for all type combinations.  For example, there is no automatic conversion from double to byte or from character to boolean.
		<br>
		An automatic type conversion will take place if:
	</p>
	<br>
	<ul>
		<li>The two types are compatible</li>
		<li>The destination type is larger than the source type</li>
	</ul>
	<br></br>
	<h2>Type Promotion</h2>
	<p>
		Some expressions automatically promote values to another type.
		<br>
		Here are the rules:</p>
	<ul>
		<li>All byte, short and char values are promoted to int when evaluating an expression.</li>
		<li>If one operand is a long, the entire expression is promoted to a long.</li>
		<li>If one operand is a float, the entire expression is promoted to a float.</li>
		<li>If one operand is a double, the entire expression is promoted to a double.</li>
	</ul>
	<br>
	<pre>

		byte a;
		. . .
		a = a * 2;              // wrong - a is promoted to an int
		a = (byte) (a * 2);     // ok
	</pre>
	<br></br>
	<h2>Casting</h2>
	<p>
		To perform a conversion between incompatible types or from a larger type to a smaller type you must cast one to the other using the following form: (target_type) value.  This is called narrowing.
	</p>
	<pre>
		int a;
		byte b;
		. . .
		b = (byte) a;
	</pre>
	<p>When a floating-point number is cast to an integer, the fractional part is lost.  This is called truncation.</p>
	<pre>
		int a;
		double b;
		. . .
		a = (int) b;
	</pre>
	<br></br>

<% include ../partials/footer %>
</div>
